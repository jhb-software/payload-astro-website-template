import type { Payload } from 'payload'
import { Config } from './payload-types'

export async function seedCMS(payload: Payload, force: boolean = false) {
  try {
    payload.logger.info('Starting CMS seeding...')

    if (force) {
      payload.logger.info('Clearing existing collections...')

      const collections = ['pages', 'posts', 'authors', 'media']

      for (const collectionSlug of collections) {
        try {
          payload.logger.info(`Deleting all documents from ${collectionSlug}...`)

          await payload.delete({
            collection: collectionSlug as keyof Config['collections'],
            where: {},
          })
        } catch (error) {
          payload.logger.warn(`Failed to clear collection ${collectionSlug}:`, error)
        }
      }
    } else {
      const pages = await payload.find({
        collection: 'pages',
        where: {},
        limit: 1,
        pagination: false,
      })

      if (pages.totalDocs > 0) {
        payload.logger.info('Pages already exist, skipping seeding...')
        return
      }
    }

    const locales: Config['locale'][] = ['de', 'en']

    // Create media items first
    payload.logger.info('Creating media items...')

    const profileImage = await payload.create({
      collection: 'media',
      filePath: './src/placeholder.webp',
      data: {
        alt: 'Max Mustermann Profile Photo',
      },
    })

    const blogImage1 = await payload.create({
      collection: 'media',
      filePath: './src/placeholder.webp',
      data: {
        alt: 'Blog Post Featured Image',
      },
    })

    // Seed Labels global for all locales
    for (const locale of locales) {
      await payload.updateGlobal({
        slug: 'labels',
        locale,
        data: {
          global: {
            'show-more': locale === 'de' ? 'Mehr anzeigen' : 'Show more',
            'learn-more': locale === 'de' ? 'Mehr erfahren' : 'Learn more',
            'open-menu': locale === 'de' ? 'Menü öffnen' : 'Open menu',
            'close-menu': locale === 'de' ? 'Menü schließen' : 'Close menu',
          },
          posts: {
            'written-by': locale === 'de' ? 'Geschrieben von' : 'Written by',
            'last-updated-at': locale === 'de' ? 'Zuletzt aktualisiert am' : 'Last updated at',
          },
          'not-found-page': {
            title: locale === 'de' ? 'Seite nicht gefunden' : 'Page not found',
            description:
              locale === 'de'
                ? 'Die angeforderte Seite existiert nicht.'
                : 'The requested page does not exist.',
            'home-page-button': locale === 'de' ? 'Zur Startseite' : 'Go to homepage',
          },
        },
      })
    }

    // Create pages first (needed for header/footer references)
    payload.logger.info('Creating pages...')

    // Create home page
    const homePage = await payload.create({
      collection: 'pages',
      locale: 'de',
      data: {
        title: 'Startseite',
        path: '', // auto generated by the pages plugin
        slug: '', // auto generated by the pages plugin
        isRootPage: true,
        breadcrumbs: [], // auto generated by the pages plugin
        meta: {
          title: 'Startseite',
          description: 'Dies ist die Startseite',
          alternatePaths: [], // auto generated by the pages plugin
        },
        hero: {
          title: 'Willkommen bei unserem Unternehmen',
          subtitle: 'Wir bieten innovative Lösungen für Ihre digitalen Herausforderungen.',
        },
        sections: [
          {
            title: 'Unsere Dienstleistungen',
            subTitle: 'Wir bieten eine breite Palette von digitalen Dienstleistungen an.',
            highlightBackground: false,
            blocks: [
              {
                blockType: 'rich-text',
                text: {
                  root: {
                    type: 'root',
                    version: 1,
                    direction: 'ltr',
                    format: '',
                    indent: 0,
                    children: [
                      {
                        type: 'paragraph',
                        version: 1,
                        children: [
                          {
                            type: 'text',
                            version: 1,
                            text: 'Von der Konzeption bis zur Umsetzung begleiten wir Sie bei jedem Schritt Ihres digitalen Projekts. Unser erfahrenes Team aus Entwicklern, Designern und Strategen arbeitet eng mit Ihnen zusammen, um maßgeschneiderte Lösungen zu entwickeln, die Ihre Geschäftsziele unterstützen.',
                          },
                        ],
                      },
                    ],
                  },
                },
              },
            ],
          },
        ],
        _status: 'published',
      },
    })

    // Create English version of home page
    await payload.update({
      collection: 'pages',
      id: homePage.id,
      locale: 'en',
      data: {
        title: 'Home',
        path: '', // auto generated by the pages plugin
        slug: '', // auto generated by the pages plugin
        isRootPage: true,
        breadcrumbs: [], // auto generated by the pages plugin
        meta: {
          title: 'Home',
          description: 'This is the home page',
          alternatePaths: [], // auto generated by the pages plugin
        },
        hero: {
          title: 'Welcome to Our Company',
          subtitle: 'We provide innovative solutions for your digital challenges.',
        },
        sections: [
          {
            title: 'Our Services',
            subTitle: 'We offer a wide range of digital services.',
            highlightBackground: false,
            id: homePage.sections?.[0].id,
            blocks: [
              {
                blockType: 'rich-text',
                text: {
                  root: {
                    type: 'root',
                    version: 1,
                    direction: 'ltr',
                    format: '',
                    indent: 0,
                    children: [
                      {
                        type: 'paragraph',
                        version: 1,
                        children: [
                          {
                            type: 'text',
                            version: 1,
                            text: 'From conception to implementation, we accompany you at every step of your digital project. Our experienced team of developers, designers and strategists work closely with you to develop customized solutions that support your business goals.',
                          },
                        ],
                      },
                    ],
                  },
                },
                id: homePage.sections?.[0]?.blocks?.[0].id,
              },
            ],
          },
        ],
      },
    })

    // Create authors overview page
    const authorsOverviewPage = await payload.create({
      collection: 'pages',
      locale: 'de',
      data: {
        title: 'Autoren',
        slug: 'autoren',
        path: '', // auto generated by the pages plugin
        breadcrumbs: [], // auto generated by the pages plugin
        meta: {
          title: 'Autoren',
          description: 'Dies ist die Autoren-Seite',
          alternatePaths: [], // auto generated by the pages plugin
        },
        hero: {
          title: 'Unsere Autoren',
          subtitle: 'Lernen Sie die Menschen hinter unseren Blogposts kennen.',
        },
        sections: [
          {
            title: 'Unser Team',
            subTitle: 'Lernen Sie die Menschen hinter unserem Unternehmen kennen.',
            highlightBackground: false,
            blocks: [
              {
                blockType: 'authors',
                authors: [], // virtual field
              },
            ],
          },
        ],
        _status: 'published',
      },
    })

    // Create English version of authors page
    await payload.update({
      collection: 'pages',
      id: authorsOverviewPage.id,
      locale: 'en',
      data: {
        title: 'Authors',
        slug: 'authors',
        path: '', // auto generated by the pages plugin
        breadcrumbs: [], // auto generated by the pages plugin
        meta: {
          title: 'Authors',
          description: 'This is the authors page',
          alternatePaths: [], // auto generated by the pages plugin
        },
        hero: {
          title: 'Our Authors',
          subtitle: 'Meet the people behind our blog posts.',
        },
        sections: [
          {
            title: 'Our Team',
            subTitle: 'Meet the people behind our company.',
            highlightBackground: false,
            id: authorsOverviewPage.sections?.[0].id,
            blocks: [
              {
                blockType: 'authors',
                authors: [], // virtual field
                id: authorsOverviewPage.sections?.[0]?.blocks?.[0].id,
              },
            ],
          },
        ],
      },
    })

    // Create authors page
    const authorsPage = await payload.create({
      collection: 'authors',
      locale: 'de',
      data: {
        name: 'Max Mustermann',
        slug: 'max-mustermann',
        path: '', // auto generated by the pages plugin
        breadcrumbs: [], // auto generated by the pages plugin
        meta: {
          title: 'Max Mustermann',
          description: 'This is the max mustermann page',
          alternatePaths: [], // auto generated by the pages plugin
        },
        profession: 'Softwareentwickler',
        parent: authorsOverviewPage.id,
        photo: profileImage.id,
        excerpt:
          'Max ist ein erfahrener Softwareentwickler mit 10 Jahren Erfahrung in der Webentwicklung.',
        description: {
          root: {
            type: 'root',
            version: 1,
            direction: 'ltr',
            format: '',
            indent: 0,
            children: [
              {
                type: 'paragraph',
                version: 1,
                children: [
                  {
                    type: 'text',
                    text: 'Max ist ein erfahrener Softwareentwickler mit 10 Jahren Erfahrung in der Webentwicklung.',
                  },
                ],
              },
            ],
          },
        },
        _status: 'published',
      },
    })

    // Create English version of authors page
    await payload.update({
      collection: 'authors',
      id: authorsPage.id,
      locale: 'en',
      data: {
        name: 'Max Mustermann',
        slug: 'max-mustermann',
        path: '', // auto generated by the pages plugin
        breadcrumbs: [], // auto generated by the pages plugin
        meta: {
          title: 'Max Mustermann',
          description: 'This is the max mustermann page',
          alternatePaths: [], // auto generated by the pages plugin
        },
        profession: 'Software Developer',
        photo: profileImage.id,
        excerpt:
          'Max is an experienced software developer with 10 years of experience in web development.',
        description: {
          root: {
            type: 'root',
            version: 1,
            direction: 'ltr',
            format: '',
            indent: 0,
            children: [
              {
                type: 'paragraph',
                version: 1,
                children: [
                  {
                    type: 'text',
                    text: 'Max is an experienced software developer with 10 years of experience in web development.',
                  },
                ],
              },
            ],
          },
        },
        _status: 'published',
      },
    })

    // Create posts overview page
    const postsOverviewPage = await payload.create({
      collection: 'pages',
      locale: 'de',
      data: {
        title: 'Blog',
        slug: 'blog',
        path: '', // auto generated by the pages plugin
        breadcrumbs: [], // auto generated by the pages plugin
        meta: {
          title: 'Blog',
          description: 'Dies ist der Blog',
          alternatePaths: [], // auto generated by the pages plugin
        },
        hero: {
          title: 'Unser Blog',
          subtitle: 'Entdecken Sie die neuesten Artikel und Einblicke aus unserem Team.',
        },
        sections: [
          {
            title: 'Neueste Blogposts',
            subTitle: 'Entdecken Sie unsere aktuellen Artikel und Einblicke.',
            highlightBackground: true,
            blocks: [
              {
                blockType: 'blog-posts',
                posts: [], // virtual field
              },
            ],
          },
        ],
        _status: 'published',
      },
    })

    // Create English version of posts overview page
    await payload.update({
      collection: 'pages',
      id: postsOverviewPage.id,
      locale: 'en',
      data: {
        title: 'Blog',
        slug: 'blog',
        path: '', // auto generated by the pages plugin
        breadcrumbs: [], // auto generated by the pages plugin
        meta: {
          title: 'Blog',
          description: 'This is the blog page',
          alternatePaths: [], // auto generated by the pages plugin
        },
        hero: {
          title: 'Our Blog',
          subtitle: 'Discover the latest articles and insights from our team.',
        },
        sections: [
          {
            title: 'Latest Blog Posts',
            subTitle: 'Discover our latest articles and insights.',
            highlightBackground: true,
            id: postsOverviewPage.sections?.[0].id,
            blocks: [
              {
                blockType: 'blog-posts',
                posts: [], // virtual field
                id: postsOverviewPage.sections?.[0]?.blocks?.[0].id,
              },
            ],
          },
        ],
      },
    })

    // Create posts page
    const postsPage = await payload.create({
      collection: 'posts',
      locale: 'de',
      data: {
        parent: postsOverviewPage.id,
        title: 'Blogartikel 1',
        path: '', // auto generated by the pages plugin
        slug: 'blogpost-1',
        breadcrumbs: [], // auto generated by the pages plugin
        meta: {
          title: 'Blogartikel 1',
          description: 'Dies ist der erste Blogartikel',
          alternatePaths: [], // auto generated by the pages plugin
        },
        authors: [authorsPage.id],
        excerpt: 'Dies ist der erste Blogartikel',
        image: blogImage1.id,
        content: {
          root: {
            type: 'root',
            version: 1,
            direction: 'ltr',
            format: '',
            indent: 0,
            children: [
              {
                type: 'paragraph',
                version: 1,
                children: [
                  {
                    type: 'text',
                    text: 'Dies ist der erste Blogartikel',
                  },
                ],
              },
            ],
          },
        },
        _status: 'published',
      },
    })

    // Create English version of posts page
    await payload.update({
      collection: 'posts',
      id: postsPage.id,
      locale: 'en',
      data: {
        title: 'Blogartikel 1',
        path: '', // auto generated by the pages plugin
        slug: 'blogpost-1',
        breadcrumbs: [], // auto generated by the pages plugin
        meta: {
          title: 'Blogartikel 1',
          description: 'This is the first blog post',
          alternatePaths: [], // auto generated by the pages plugin
        },
        authors: [authorsPage.id],
        excerpt: 'This is the first blog post',
        image: blogImage1.id,
        content: {
          root: {
            type: 'root',
            version: 1,
            direction: 'ltr',
            format: '',
            indent: 0,
            children: [
              {
                type: 'paragraph',
                version: 1,
                children: [
                  {
                    type: 'text',
                    text: 'This is the first blog post',
                  },
                ],
              },
            ],
          },
        },
        _status: 'published',
      },
    })

    // Now seed Header and Footer globals with page references

    // Create English version first
    const header = await payload.updateGlobal({
      slug: 'header',
      locale: 'en',
      data: {
        links: [
          {
            page: homePage.id,
            label: 'Home',
          },
          {
            page: postsOverviewPage.id,
            label: 'Blog',
          },
          {
            page: authorsOverviewPage.id,
            label: 'Authors',
          },
        ],
      },
    })

    // Add German version with same IDs
    await payload.updateGlobal({
      slug: 'header',
      locale: 'de',
      data: {
        links: [
          {
            id: header.links?.[0]?.id,
            page: homePage.id,
            label: 'Startseite',
          },
          {
            id: header.links?.[1]?.id,
            page: postsOverviewPage.id,
            label: 'Blog',
          },
          {
            id: header.links?.[2]?.id,
            page: authorsOverviewPage.id,
            label: 'Autoren',
          },
        ],
      },
    })

    // Create footer English version
    const footer = await payload.updateGlobal({
      slug: 'footer',
      locale: 'en',
      data: {
        links: [
          {
            page: homePage.id,
            label: 'Home',
          },
        ],
      },
    })

    // Add German version with same IDs
    await payload.updateGlobal({
      slug: 'footer',
      locale: 'de',
      data: {
        links: [
          {
            id: footer.links?.[0]?.id,
            page: homePage.id,
            label: 'Startseite',
          },
        ],
      },
    })

    payload.logger.info('CMS seeding completed successfully!')
    return
  } catch (error) {
    payload.logger.error('Error seeding CMS:', error)
    throw error
  }
}
